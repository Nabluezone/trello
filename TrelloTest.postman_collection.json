{
	"info": {
		"_postman_id": "cc669fd4-4b8e-437c-8ed4-3e53c8c65b3e",
		"name": "TrelloTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34027588"
	},
	"item": [
		{
			"name": "create a board with random name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"boardId\", jsonData.id);",
							"console.log(jsonData.id)",
							"// var jsonData = pm.response.json();",
							"",
							"pm.test('verify the board has been created', function () {",
							"    // var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get('boardname'));",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"})",
							"",
							"pm.test('verify the board permissionLevel', function () {",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql('private');",
							"})",
							"",
							"",
							"pm.test('get boardid', function () {",
							"    const jsonData = pm.response.json();",
							"    console.log(jsonData.prefs);",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('boardId'));",
							"    console.log(pm.environment.get('boardId'));",
							"})",
							"",
							"// pm.test('Status code is 200', function () {",
							"//     pm.response.to.have.status(200);",
							"// })",
							"",
							"// pm.test(\"your test passed\", function(){",
							"//     pm.expect(true).to.be.true;",
							"//     pm.expect([].length).to.eql(0);",
							"//     pm.expect([]).to.be.empty;",
							"//     pm.expect([1,2,3]).to.include(3);",
							"//     pm.expect(2).to.be.oneOf([1,2,3]);",
							"//     pm.expect('Lily').to.match(/^Lily/);",
							"// });",
							"",
							"// pm.test('verify a is be', function () {",
							"//     let a = { 'name': 'Lucy' };",
							"//     let b = { 'name': 'Lucy' };",
							"//     pm.expect(a).to.eql(b);",
							"//     // pm.expect(a).to.eql(b, 'a equal b');",
							"// })",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const boardname = getRandomBoardName()\r",
							"pm.environment.set(\"boardname\", boardname);\r",
							"\r",
							"function getRandomBoardName(){\r",
							"    return \"My board name \" + parseInt(Math.random()*10000);\r",
							"}\r",
							"\r",
							"// pm.globals.set(\"boardname\", getRandomBoardName());\r",
							"\r",
							"// function getRandomBoardName(){\r",
							"//     const boardname = \"My board name \" + parseInt(Math.random()*10000);\r",
							"//     console.log(boardname);\r",
							"//     return boardname;\r",
							"// }\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}?name={{boardname}}&key={{trellokey}}&token={{trellotoken}}&defaultLists=false",
					"host": [
						"{{url}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardname}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"let jsonData1 = pm.response.json()\r",
							"let hideVotes =jsonData1.prefs.hideVotes\r",
							"let ido = jsonData1.idOrganization\r",
							"// console.log(jsonData1.prefs.hideVotes);\r",
							"pm.test(\"isTemplate is false\",function(){\r",
							"    pm.expect(hideVotes).to.eql(false);\r",
							"    pm.expect(ido).to.eql('660cc9bf9bbf21e11bbc01aa');\r",
							"})\r",
							"for (let key in jsonData1.labelNames ){\r",
							"    // console.log(key,jsonData1.labelNames[key]);\r",
							"    if(key == 'green'){\r",
							"        console.log(key);\r",
							"    }\r",
							"}\r",
							"// let switcherViews = jsonData1.prefs.switcherViews[0]\r",
							"// // console.log(jsonData1.prefs.switcherViews[0]['enabled']);\r",
							"// pm.test('switcherViews should be ture',function(){\r",
							"//     pm.expect(switcherViews.viewType).to.eql('Board');\r",
							"//     pm.expect(switcherViews.enabled).to.be.true;\r",
							"\r",
							"// })\r",
							"\r",
							"// for(let switcherviews of jsonData1.prefs.switcherViews){\r",
							"//     // console.log(switcherviews)\r",
							"//     // console.log(switcherviews.viewType)\r",
							"//     if (switcherviews.viewType == 'Timeline'){\r",
							"//         console.log(switcherviews.enabled)\r",
							"//         pm.expect(switcherViews.enabled).to.eql(true);\r",
							"//     }\r",
							"//     //\r",
							"// }"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/:id?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{url}}"
					],
					"path": [
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}",
							"uuid": "eff18d62-e29d-4229-b7c9-4e2cc6ee71d7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a field on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Verify the board has been opened', function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData._value);",
							"    pm.expect(jsonData._value == false)",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/:id/closed?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{url}}"
					],
					"path": [
						":id",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}",
							"uuid": "ea5f9b99-4a84-46cc-97e9-6323ef618a32"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a list of board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Set idList environment variable\", function () {\r",
							"    pm.environment.set('idList', pm.response.json().id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"listname\", getRandomlistName());\r",
							"\r",
							"function getRandomlistName(){\r",
							"    const listname = \"My list name \" + parseInt(Math.random()*10000);\r",
							"    console.log(listname);\r",
							"    return listname;\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}{{boardId}}/lists?key={{trellokey}}&token={{trellotoken}}&name={{listname}}&closed=false&limits/attachments/perBoard/status=ok",
					"host": [
						"{{url}}{{boardId}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "{{listname}}"
						},
						{
							"key": "closed",
							"value": "false"
						},
						{
							"key": "limits/attachments/perBoard/status",
							"value": "ok"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{boardId}}/lists?key={{trellokey}}&token={{trellotoken}}&defaultLists=false",
					"host": [
						"{{url}}{{boardId}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Set cardid environment variable\", function () {\r",
							"    pm.environment.set('cardid', pm.response.json().id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"cardname\", getRandomcardName());\r",
							"\r",
							"function getRandomcardName(){\r",
							"    const cardname = \"My card name \" + parseInt(Math.random()*10000);\r",
							"    console.log(cardname);\r",
							"    return cardname;\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?idList={{idList}}&key={{trellokey}}&token={{trellotoken}}&name={{cardname}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{idList}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "{{cardname}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{cardid}}?key={{trellokey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{cardid}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a checklist on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"checklistid\",)",
							"pm.test(\"Set checklistid environment variable\", function () {",
							"    pm.environment.set('checklistid', pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/checklists?idCard={{cardid}}&key={{trellokey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{cardid}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a checklist on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/checklists/{{checklistid}}?key={{trellokey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"checklists",
						"{{checklistid}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create a label on board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}{{boardId}}/labels?name=new label&key={{trellokey}}&token={{trellotoken}}&color=red",
					"host": [
						"{{url}}{{boardId}}"
					],
					"path": [
						"labels"
					],
					"query": [
						{
							"key": "name",
							"value": "new label"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "color",
							"value": "red"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}{{boardId}}?name=new_board&prefs/permissionLevel=public&key={{trellokey}}&token={{trellotoken}}&desc=haha",
					"host": [
						"{{url}}{{boardId}}"
					],
					"query": [
						{
							"key": "name",
							"value": "new_board"
						},
						{
							"key": "prefs/permissionLevel",
							"value": "public"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "desc",
							"value": "haha"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Del a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/:id?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{url}}"
					],
					"path": [
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}",
							"uuid": "03651a9e-6a4c-4a81-a516-12e67d0dc580"
						}
					]
				}
			},
			"response": []
		}
	]
}
